name: Build Android APK Natively

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. يسحب آخر نسخة من الكود بتاعك
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. يجهز بيئة عمل Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # 3. يجهز بيئة عمل Java (ضرورية لبناء الأندرويد)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 4. يثبت كل مكتبات المشروع
      - name: Install dependencies
        run: npm install

      # 5. يحول المشروع لـ Bare (ينشئ فولدر android)
      - name: Prebuild for Android
        run: npx expo prebuild --platform android

      # 6. يرجع ملف التوقيع السري من النص اللي حفظناه في Secrets
      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ./android/my-release-key.keystore

      # 7. ((((  الخطوة الجديدة والمهمة لحل المشكلة  ))))
      # يعطي ملف gradlew صلاحية التنفيذ
      - name: Make gradlew executable
        working-directory: ./android
        run: chmod +x ./gradlew

      # 8. يبدأ عملية البناء باستخدام Gradle ويوقع التطبيق
      - name: Build Android Release APK
        working-directory: ./android
        run: ./gradlew assembleRelease
        env:
          MYAPP_UPLOAD_STORE_FILE: my-release-key.keystore
          MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # 9. يرفع ملف الـ APK النهائي عشان تقدر تنزله
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: calora-apk
          path: android/app/build/outputs/apk/release/app-release.apk