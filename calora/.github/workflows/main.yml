name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # الخطوة 1: هننزل الكود في فولدر نضيف اسمه source عشان نمنع لخبطة المسارات
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: source

      # الخطوة 2: هنحدد الفولدر اللي كل الأوامر هتشتغل جواه بشكل صريح
      - name: Set Working Directory
        run: echo "WORK_DIR=source/calora" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ env.WORK_DIR }}/package-lock.json

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # الخطوة 3: هننزل المكتبات جوه الفولدر الصح
      - name: Install Dependencies
        working-directory: ${{ env.WORK_DIR }}
        run: npm install --legacy-peer-deps

      # ===================================================================
      #  الخطوة 4: الخطوة السحرية اللي كانت ناقصة لمشاريع Expo
      # ===================================================================
      - name: Prebuild and Sync Native Project
        working-directory: ${{ env.WORK_DIR }}
        run: npx expo prebuild --platform android --no-install

      # الخطوة 5: هنبني الـ APK من الفولدر الصح
      - name: Build Debug APK
        working-directory: ${{ env.WORK_DIR }}/android
        run: ./gradlew assembleDebug

      # الخطوة 6: هنرفع الـ APK من المسار الكامل والصحيح
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.WORK_DIR }}/android/app/build/outputs/apk/debug/*.apk